apply plugin: 'maven-publish'

def getLibVersion = { ->
    return "1.0.0"
}
def getGroupId = { ->
    return "com.ronem.toaster"
}
def getArtifactId = { ->
    return "mytoasterlib"
}


def githubProperties = new Properties()
githubProperties.load(new FileInputStream("github.properties"))

def getGithubUserId = { ->
    return githubProperties['gpr.user']
}

def getGithubToken = { ->
    return githubProperties['gpr.key']
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}


publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/${getGithubUserId()}/${getArtifactId()}")
            credentials {
                username = getGithubUserId()
                password = getGithubToken()
            }
        }
        maven {
            name = 'CustomMavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
    publications {
        mytoaster(MavenPublication) {
            groupId getGroupId()
            artifactId getArtifactId()
            version getLibVersion()
            artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
            artifact(sourceJar)

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}